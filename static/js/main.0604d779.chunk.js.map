{"version":3,"sources":["context/userContext.js","components/pages/Dashboard.jsx","components/auth/AuthOptions.jsx","components/layout/Header.js","components/pages/Home.jsx","components/misc/ErrorNotice.jsx","components/auth/Register.jsx","components/auth/Login.jsx","App.js","serviceWorker.js","index.js"],"names":["createContext","Dashboard","userData","useContext","UserContext","history","useHistory","useEffect","user","push","shopName","console","log","type","value","className","to","AuthOptions","setUserData","onClick","token","undefined","localStorage","setItem","Header","Component","Home","shopOwner","ErrorNotice","props","message","clearError","Register","useState","email","setEmail","password","setPassword","passwordCheck","setPasswordCheck","setShopName","setShopOwner","shopAddress","setShopAddress","contactNumber","setContactNumber","error","setError","submit","e","a","preventDefault","newUser","axios","post","loginResponse","data","response","msg","onSubmit","id","onChange","target","placeholder","Login","loginUser","App","getItem","headers","get","userRes","checkLoggedIn","Provider","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0604d779.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport default createContext(null);","import React, { useEffect, useContext } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport UserContext from '../../context/userContext';\n\nfunction Dashboard () {\n    const {userData} = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if(!userData.user)\n            history.push(\"/login\");\n\n    }, []);\n    return (\n        <div>\n            {userData.user ? (\n                <>\n                    <h1>Welcome to {userData.user.shopName}</h1>\n                    {console.log(userData.user)}\n                    <input type=\"submit\" value=\"Register\" className=\"btn btn-primary\" /><br/><br/>\n                    <input type=\"submit\" value=\"Register\" className=\"btn btn-primary\" /><br/><br/>\n                    <input type=\"submit\" value=\"Register\" className=\"btn btn-primary\" /><br/><br/>\n                </>\n            ) : (\n                <>\n                    <h2>You are not logged in</h2>\n                    <Link to=\"/login\">Login</Link>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default Dashboard;","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport UserContext from \"../../context/userContext\";\n\nfunction AuthOptions () {\n    const { userData, setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    const register = () => history.push(\"/register\");\n    const login = () => history.push(\"/login\");\n    const logout = () => {\n        setUserData({\n            token: undefined,\n            user: undefined\n        })\n        localStorage.setItem(\"auth-token\",\"\");\n    };\n\n    return (\n        <nav className=\"auth-options\">\n            {userData.user ? (\n                <button className=\"btn btn-primary mr-2\" onClick={logout}>Logout</button>\n            ) : (\n                <>\n                <button className=\"btn btn-primary mr-2\" onClick={register}>Sign Up</button>\n                <button className=\"btn btn-primary mr-2\" onClick={login}>Login</button>\n                </>\n            )}\n        </nav>\n    )\n}\n\nexport default AuthOptions;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport AuthOptions from '../auth/AuthOptions';\n\nclass Header extends Component {\n   \n    render() { \n        return ( \n            <header className=\"header\">\n                <Link to=\"/\"><h2 className=\"title\">Covid Pro</h2></Link>\n                <AuthOptions />\n            </header>\n         );\n    }\n}\n \nexport default Header;","import React, { useEffect, useContext } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport UserContext from '../../context/userContext';\n\nfunction Home () {\n    const {userData} = useContext(UserContext);\n    const history = useHistory();\n\n    // If use not exists\n    useEffect(() => {\n        if(!userData.user)\n            history.push(\"/login\");\n\n    }, []);\n\n    return (\n        <div>\n            {userData.user ? (\n                <>\n                    {console.log(userData.user)}\n                    {console.log(userData.user.shopName)}\n                    {console.log(userData.user.shopOwner)}\n                    <h1>Welcome {userData.user.shopName}</h1>\n                    <Link to=\"/dashboard\">Dashboard</Link>\n                </>\n            ) : (\n                <>\n                    <h2>You are not logged in</h2>\n                    <Link to=\"/login\">Login</Link>\n                </>\n            )}\n        </div>\n    );\n}\n \nexport default Home;","import React from 'react';\n\nfunction ErrorNotice (props) {\n    return (\n        <div className=\"error-notice\">\n            <span>{props.message}</span>\n            <button onClick={props.clearError}>X</button>\n        </div>\n    );\n}\n\nexport default ErrorNotice;","import React, { useState, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport UserContext from \"../../context/userContext\";\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\n\nfunction Register () {\n\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [passwordCheck, setPasswordCheck] = useState();\n    const [shopName, setShopName] = useState();\n    const [shopOwner, setShopOwner] = useState();\n    const [shopAddress, setShopAddress] = useState();\n    const [contactNumber, setContactNumber] = useState();;\n    const [error, setError] = useState();\n\n    const { setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    const submit = async (e) => {\n        e.preventDefault();\n\n        try{\n            const newUser = {email, password, passwordCheck, shopName, shopOwner, shopAddress, contactNumber};\n            await axios.post(\"http://localhost:5000/users/register\", newUser);\n            const loginResponse = await axios.post(\"http://localhost:5000/users/login\", {\n                email, password\n            });\n            setUserData({\n                token: loginResponse.data.token,\n                user: loginResponse.data.user\n            });\n            localStorage.setItem(\"auth-token\", loginResponse.data.token);\n            history.push(\"/\");\n        } catch(err) {\n            err.response.data.msg && setError(err.response.data.msg)\n        }\n        \n    };\n   \n    return ( \n        <div className=\"register\">\n            <h2>Register</h2><br/>\n            {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}<br/>\n            <form onSubmit={submit}>\n\n                <label>Email: </label>\n                <input type=\"email\" id=\"email\" onChange={e => setEmail(e.target.value)}/><br/><br/>\n\n                <label>Password: </label>\n                <input type=\"password\" id=\"password\" onChange={e => setPassword(e.target.value)}/>\n                <input type=\"password\" placeholder=\"Confirm password\" onChange={e => setPasswordCheck(e.target.value)}/><br/><br/>\n\n                <label>Shop name:  </label>\n                <input type=\"text\" id=\"shop-name\" onChange={e => setShopName(e.target.value)}/><br/><br/>\n\n                <label>Shop owner: </label>\n                <input type=\"text\" id=\"shop-owner\" onChange={e => setShopOwner(e.target.value)}/><br/><br/>\n\n                <label>Shop address: </label>\n                <input type=\"text\" id=\"shop-address\" onChange={e => setShopAddress(e.target.value)}/><br/><br/>\n\n                <label>Contact number: </label>\n                <input type=\"text\" id=\"contact-number\" onChange={e => setContactNumber(e.target.value)}/><br/><br/>\n\n                <input type=\"submit\" value=\"Register\" className=\"btn btn-primary\" /><br/><br/>\n            </form>\n        </div>\n        );\n}\n\nexport default Register;","import React, { useState, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport UserContext from \"../../context/userContext\";\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\n\nfunction Login () {\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [error, setError] = useState();\n\n    const { setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try{\n            const loginUser = {email, password};\n            const loginResponse = await axios.post(\"http://localhost:5000/users/login\", loginUser);\n            setUserData({\n                token: loginResponse.data.token,\n                user: loginResponse.data.user\n            });\n            localStorage.setItem(\"auth-token\", loginResponse.data.token);\n            history.push(\"/\");\n        } catch(err) {\n            err.response.data.msg && setError(err.response.data.msg)\n        }\n        \n    };\n    \n    return (\n        <div className=\"login\">\n            <h2>Login</h2><br/>\n            {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}<br/>\n            <form onSubmit={submit}>\n\n                <label>Email: </label>\n                <input type=\"email\" id=\"email\" onChange={e => setEmail(e.target.value)}/><br/><br/>\n\n                <label>Password: </label>\n                <input type=\"password\" id=\"password\" onChange={e => setPassword(e.target.value)}/><br/><br/>\n\n                <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\" />\n            </form>\n        </div>\n    );\n}\n \nexport default Login;","import React, {useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport axios from 'axios';\n\nimport './App.css';\n\nimport Dashboard from './components/pages/Dashboard';\nimport Header from './components/layout/Header';\nimport Home from './components/pages/Home';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport UserContext from './context/userContext';\n\nfunction App() {\n  const [ userData, setUserData] = useState({\n    token: undefined,\n    user: undefined\n  });\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      if(token === null){\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n      const tokenResponse = await axios.post('http://localhost:5000/users/tokenIsValid', null, {headers: {\"x-auth-token\": token}});\n      if (tokenResponse.data) {\n        const userRes = await axios.get(\"http://localhost:5000/users/\", {\n          headers: { \"x-auth-token\": token },\n        });\n        setUserData({\n          token,\n          user: userRes.data,\n        });\n      }\n    }\n\n    checkLoggedIn();\n  }, []);\n\n  return (\n      <BrowserRouter>\n        <UserContext.Provider value={{ userData, setUserData }}>\n          <Header />\n          <br/>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/login\" component={Login} />\n          </Switch>\n        </UserContext.Provider>\n      </BrowserRouter>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}